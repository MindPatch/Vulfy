name: Dependency Update

on:
  schedule:
    # Run weekly on Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config

    - name: Install cargo-edit
      run: cargo install cargo-edit

    - name: Update Cargo dependencies
      run: |
        cargo update
        cargo upgrade --incompatible

    - name: Check if dependencies changed
      id: changes
      run: |
        if git diff --quiet Cargo.toml Cargo.lock; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request
      if: steps.changes.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies"
        title: "🔄 Weekly Dependency Update"
        body: |
          ## Dependency Update

          This is an automated PR to update Rust dependencies.

          ### Changes
          - Updated `Cargo.lock` with latest compatible versions
          - Upgraded incompatible dependencies in `Cargo.toml`

          ### Review Notes
          Please review the changes and ensure all functionality works as expected.
        branch: dependency-update
        delete-branch: true

  outdated-check:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config

    - name: Install cargo-outdated
      run: cargo install cargo-outdated

    - name: Check for outdated dependencies
      run: |
        cargo outdated --format json > outdated.json || true
        echo "## Outdated Dependencies Report" > outdated-report.md
        echo "" >> outdated-report.md
        
        if [ -s outdated.json ]; then
          jq -r '.dependencies[] | select(.latest != .project) | "- **\(.name)**: \(.project) → \(.latest)"' outdated.json >> outdated-report.md
        else
          echo "All dependencies are up to date! 🎉" >> outdated-report.md
        fi

    - name: Upload outdated report
      uses: actions/upload-artifact@v4
      with:
        name: outdated-dependencies-report
        path: outdated-report.md 