name: CI

on:
  push:
    branches: [ main, master, feat/* ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-suffix: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary-suffix: ".exe"
          - os: macos-13  # Intel runner for x86_64
            target: x86_64-apple-darwin
            binary-suffix: ""
          - os: macos-latest  # Apple Silicon runner for arm64
            target: aarch64-apple-darwin
            binary-suffix: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.target }}-cargo-

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config

    - name: Install system dependencies (macOS)
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install openssl pkg-config
        echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl)" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$(brew --prefix openssl)/lib/pkgconfig" >> $GITHUB_ENV

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Upload binary (Unix)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: vulfy-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/vulfy

    - name: Upload binary (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: vulfy-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/vulfy.exe 